import { call, put } from 'redux-saga/effects'
import <%= pascalCase(props.name) %>Actions from '../Redux/<%= pascalCase(props.name) %>Redux'
// import { <%= pascalCase(props.name) %>Selectors } from '../Redux/<%= pascalCase(props.name) %>Redux'
import { isNil } from 'ramda'

export function * <%= camelCase(`${props.operation}_${props.name}`) %> (api, action) {
  const { data } = action
  // const currentData = yield select(<%= pascalCase(props.name) %>Selectors.getData)
  // make the call to the api
  const response = yield call(api.<%= camelCase(`${props.operation}_${props.name}`) %>, data)

  // success?
  if (response.ok && isNil(response.data.error)) {
    yield put(<%= pascalCase(props.name) %>Actions.<%= camelCase(`${props.name}_${props.operation}`) %>Success(response.data))
  } else {
    yield put(<%= pascalCase(props.name) %>Actions.<%= camelCase(`${props.name}_${props.operation}`) %>Failure())
  }
}
